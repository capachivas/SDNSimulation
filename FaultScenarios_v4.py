#! /usr/bin/env python
#
# GUI module generated by v4 version 4.12
# In conjunction with Tcl version 8.6
#    May 04, 2018 11:11:34 AM

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import FaultScenarios_v4_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = Fault_Scenarios_Generator (root)
    FaultScenarios_v4_support.init(root, top)
    root.mainloop()

w = None
def create_Fault_Scenarios_Generator(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = Fault_Scenarios_Generator (w)
    FaultScenarios_v4_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Fault_Scenarios_Generator():
    global w
    w.destroy()
    w = None


class Fault_Scenarios_Generator:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("863x500+193+172")
        top.title("Fault Scenarios Generator")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



	self.Label_host_mac = Label(top)
        self.Label_host_mac.place(relx=0.53, rely=0.13, height=41
                , width=94)
        self.Label_host_mac.configure(activebackground="#f9f9f9")
        self.Label_host_mac.configure(activeforeground="black")
        self.Label_host_mac.configure(background="#d9d9d9")
        self.Label_host_mac.configure(disabledforeground="#a3a3a3")
        self.Label_host_mac.configure(foreground="#000000")
        self.Label_host_mac.configure(highlightbackground="#d9d9d9")
        self.Label_host_mac.configure(highlightcolor="black")
        self.Label_host_mac.configure(text='''Host MAC''')

        self.listbox_host_mac = ScrolledListBox(top)
        self.listbox_host_mac.place(relx=0.5, rely=0.23, relheight=0.16
                , relwidth=0.17)
        self.listbox_host_mac.configure(background="white")
        self.listbox_host_mac.configure(disabledforeground="#a3a3a3")
        self.listbox_host_mac.configure(font="TkFixedFont")
        self.listbox_host_mac.configure(foreground="black")
        self.listbox_host_mac.configure(highlightbackground="#d9d9d9")
        self.listbox_host_mac.configure(highlightcolor="#d9d9d9")
        self.listbox_host_mac.configure(selectbackground="#c4c4c4")
        self.listbox_host_mac.configure(selectforeground="black")
        self.listbox_host_mac.configure(width=10)

        self.Label_host_name = Label(top)
        self.Label_host_name.place(relx=0.05, rely=0.11, height=41, width=94)
        self.Label_host_name.configure(activebackground="#f9f9f9")
        self.Label_host_name.configure(activeforeground="black")
        self.Label_host_name.configure(background="#d9d9d9")
        self.Label_host_name.configure(disabledforeground="#a3a3a3")
        self.Label_host_name.configure(foreground="#000000")
        self.Label_host_name.configure(highlightbackground="#d9d9d9")
        self.Label_host_name.configure(highlightcolor="black")
        self.Label_host_name.configure(text='''Host names''')

        self.Label_switches_name = Label(top)
        self.Label_switches_name.place(relx=0.03, rely=0.39, height=21
                , width=102)
        self.Label_switches_name.configure(activebackground="#f9f9f9")
        self.Label_switches_name.configure(activeforeground="black")
        self.Label_switches_name.configure(background="#d9d9d9")
        self.Label_switches_name.configure(disabledforeground="#a3a3a3")
        self.Label_switches_name.configure(foreground="#000000")
        self.Label_switches_name.configure(highlightbackground="#d9d9d9")
        self.Label_switches_name.configure(highlightcolor="black")
        self.Label_switches_name.configure(text='''Switch names''')

        self.Label_controller = Label(top)
        self.Label_controller.place(relx=0.26, rely=0.64, height=21, width=164)
        self.Label_controller.configure(activebackground="#f9f9f9")
        self.Label_controller.configure(activeforeground="black")
        self.Label_controller.configure(background="#d9d9d9")
        self.Label_controller.configure(disabledforeground="#a3a3a3")
        self.Label_controller.configure(foreground="#000000")
        self.Label_controller.configure(highlightbackground="#d9d9d9")
        self.Label_controller.configure(highlightcolor="black")
        self.Label_controller.configure(text='''Controller IP addresses''')

        self.Label_host_interface = Label(top)
        self.Label_host_interface.place(relx=0.72, rely=0.13, height=41
                , width=94)
        self.Label_host_interface.configure(activebackground="#f9f9f9")
        self.Label_host_interface.configure(activeforeground="black")
        self.Label_host_interface.configure(background="#d9d9d9")
        self.Label_host_interface.configure(disabledforeground="#a3a3a3")
        self.Label_host_interface.configure(foreground="#000000")
        self.Label_host_interface.configure(highlightbackground="#d9d9d9")
        self.Label_host_interface.configure(highlightcolor="black")
        self.Label_host_interface.configure(text='''Host interfaces''')

        self.Label_switch_interface = Label(top)
        self.Label_switch_interface.place(relx=0.73, rely=0.38, height=41
                , width=124)
        self.Label_switch_interface.configure(activebackground="#f9f9f9")
        self.Label_switch_interface.configure(activeforeground="black")
        self.Label_switch_interface.configure(background="#d9d9d9")
        self.Label_switch_interface.configure(disabledforeground="#a3a3a3")
        self.Label_switch_interface.configure(foreground="#000000")
        self.Label_switch_interface.configure(highlightbackground="#d9d9d9")
        self.Label_switch_interface.configure(highlightcolor="black")
        self.Label_switch_interface.configure(text='''Switch interfaces''')

        self.Label_controller_interface = Label(top)
        self.Label_controller_interface.place(relx=0.47, rely=0.62, height=41
                , width=134)
        self.Label_controller_interface.configure(activebackground="#f9f9f9")
        self.Label_controller_interface.configure(activeforeground="black")
        self.Label_controller_interface.configure(background="#d9d9d9")
        self.Label_controller_interface.configure(disabledforeground="#a3a3a3")
        self.Label_controller_interface.configure(foreground="#000000")
        self.Label_controller_interface.configure(highlightbackground="#d9d9d9")
        self.Label_controller_interface.configure(highlightcolor="black")
        self.Label_controller_interface.configure(text='''Controller interfaces''')

        self.listbox_host_name = ScrolledListBox(top)
        self.listbox_host_name.place(relx=0.05, rely=0.22, relheight=0.15
                , relwidth=0.12)
        self.listbox_host_name.configure(background="white")
        self.listbox_host_name.configure(disabledforeground="#a3a3a3")
        self.listbox_host_name.configure(font="TkFixedFont")
        self.listbox_host_name.configure(foreground="black")
        self.listbox_host_name.configure(highlightbackground="#d9d9d9")
        self.listbox_host_name.configure(highlightcolor="#d9d9d9")
        self.listbox_host_name.configure(selectbackground="#c4c4c4")
        self.listbox_host_name.configure(selectforeground="black")
        self.listbox_host_name.configure(width=10)
	self.listbox_host_name.bind('<<ListboxSelect>>',FaultScenarios_v4_support.onselect_host)

        self.listbox_switch_name = ScrolledListBox(top)
        self.listbox_switch_name.place(relx=0.05, rely=0.46, relheight=0.15
                , relwidth=0.12)
        self.listbox_switch_name.configure(background="white")
        self.listbox_switch_name.configure(disabledforeground="#a3a3a3")
        self.listbox_switch_name.configure(font="TkFixedFont")
        self.listbox_switch_name.configure(foreground="black")
        self.listbox_switch_name.configure(highlightbackground="#d9d9d9")
        self.listbox_switch_name.configure(highlightcolor="#d9d9d9")
        self.listbox_switch_name.configure(selectbackground="#c4c4c4")
        self.listbox_switch_name.configure(selectforeground="black")
        self.listbox_switch_name.configure(width=10)
	self.listbox_switch_name.bind('<<ListboxSelect>>',FaultScenarios_v4_support.onselect_switch)

        self.listbox_controller_ip = ScrolledListBox(top)
        self.listbox_controller_ip.place(relx=0.28, rely=0.7, relheight=0.21
                , relwidth=0.16)
        self.listbox_controller_ip.configure(background="white")
        self.listbox_controller_ip.configure(disabledforeground="#a3a3a3")
        self.listbox_controller_ip.configure(font="TkFixedFont")
        self.listbox_controller_ip.configure(foreground="black")
        self.listbox_controller_ip.configure(highlightbackground="#d9d9d9")
        self.listbox_controller_ip.configure(highlightcolor="#d9d9d9")
        self.listbox_controller_ip.configure(selectbackground="#c4c4c4")
        self.listbox_controller_ip.configure(selectforeground="black")
        self.listbox_controller_ip.configure(width=10)


        self.listbox_host_interface = ScrolledListBox(top)
        self.listbox_host_interface.place(relx=0.73, rely=0.23, relheight=0.16
                , relwidth=0.12)
        self.listbox_host_interface.configure(background="white")
        self.listbox_host_interface.configure(disabledforeground="#a3a3a3")
        self.listbox_host_interface.configure(font="TkFixedFont")
        self.listbox_host_interface.configure(foreground="black")
        self.listbox_host_interface.configure(highlightbackground="#d9d9d9")
        self.listbox_host_interface.configure(highlightcolor="#d9d9d9")
        self.listbox_host_interface.configure(selectbackground="#c4c4c4")
        self.listbox_host_interface.configure(selectforeground="black")
        self.listbox_host_interface.configure(width=10)
	self.listbox_host_interface.bind('<<ListboxSelect>>',FaultScenarios_v4_support.onselect_host_interface)

        self.listbox_switch_interface = ScrolledListBox(top)
        self.listbox_switch_interface.place(relx=0.74, rely=0.46, relheight=0.15, relwidth=0.12)
        self.listbox_switch_interface.configure(background="white")
        self.listbox_switch_interface.configure(disabledforeground="#a3a3a3")
        self.listbox_switch_interface.configure(font="TkFixedFont")
        self.listbox_switch_interface.configure(foreground="black")
        self.listbox_switch_interface.configure(highlightbackground="#d9d9d9")
        self.listbox_switch_interface.configure(highlightcolor="#d9d9d9")
        self.listbox_switch_interface.configure(selectbackground="#c4c4c4")
        self.listbox_switch_interface.configure(selectforeground="black")
        self.listbox_switch_interface.configure(width=10)
	self.listbox_switch_interface.bind('<<ListboxSelect>>',FaultScenarios_v4_support.onselect_switch_interface)
      
	self.listbox_controller_interface = ScrolledListBox(top)
        self.listbox_controller_interface.place(relx=0.48, rely=0.7
                , relheight=0.21, relwidth=0.16)
        self.listbox_controller_interface.configure(background="white")
        self.listbox_controller_interface.configure(disabledforeground="#a3a3a3")
        self.listbox_controller_interface.configure(font="TkFixedFont")
        self.listbox_controller_interface.configure(foreground="black")
        self.listbox_controller_interface.configure(highlightbackground="#d9d9d9")
        self.listbox_controller_interface.configure(highlightcolor="#d9d9d9")
        self.listbox_controller_interface.configure(selectbackground="#c4c4c4")
        self.listbox_controller_interface.configure(selectforeground="black")
        self.listbox_controller_interface.configure(width=10)
	self.listbox_controller_interface.bind('<<ListboxSelect>>',FaultScenarios_v4_support.onselect_controller_interface)

        self.b_host_up = Button(top)
        self.b_host_up.place(relx=0.21, rely=0.22, height=24, width=26)
        self.b_host_up.configure(activebackground="#d9d9d9")
        self.b_host_up.configure(activeforeground="#000000")
        self.b_host_up.configure(background="#00ff00")
        self.b_host_up.configure(command=FaultScenarios_v4_support.host_up)
        self.b_host_up.configure(disabledforeground="#a3a3a3")
        self.b_host_up.configure(foreground="#000000")
        self.b_host_up.configure(highlightbackground="#d9d9d9")
        self.b_host_up.configure(highlightcolor="black")
        self.b_host_up.configure(pady="0")
        self.b_host_up.configure(text='''UP''')

        self.b_host_down = Button(top)
        self.b_host_down.place(relx=0.2, rely=0.32, height=24, width=48)
        self.b_host_down.configure(activebackground="#d9d9d9")
        self.b_host_down.configure(activeforeground="#000000")
        self.b_host_down.configure(background="#ff0000")
        self.b_host_down.configure(command=FaultScenarios_v4_support.host_down)
        self.b_host_down.configure(disabledforeground="#a3a3a3")
        self.b_host_down.configure(foreground="#000000")
        self.b_host_down.configure(highlightbackground="#d9d9d9")
        self.b_host_down.configure(highlightcolor="black")
        self.b_host_down.configure(pady="0")
        self.b_host_down.configure(text='''DOWN''')

        self.b_switch_up = Button(top)
        self.b_switch_up.place(relx=0.21, rely=0.46, height=24, width=26)
        self.b_switch_up.configure(activebackground="#d9d9d9")
        self.b_switch_up.configure(activeforeground="#000000")
        self.b_switch_up.configure(background="#00ff00")
        self.b_switch_up.configure(command=FaultScenarios_v4_support.switch_up)
        self.b_switch_up.configure(disabledforeground="#a3a3a3")
        self.b_switch_up.configure(foreground="#000000")
        self.b_switch_up.configure(highlightbackground="#d9d9d9")
        self.b_switch_up.configure(highlightcolor="black")
        self.b_switch_up.configure(pady="0")
        self.b_switch_up.configure(text='''UP''')

        self.b_switch_down = Button(top)
        self.b_switch_down.place(relx=0.2, rely=0.56, height=24, width=48)
        self.b_switch_down.configure(activebackground="#d9d9d9")
        self.b_switch_down.configure(activeforeground="#000000")
        self.b_switch_down.configure(background="#ff0000")
        self.b_switch_down.configure(command=FaultScenarios_v4_support.switch_down)
        self.b_switch_down.configure(disabledforeground="#a3a3a3")
        self.b_switch_down.configure(foreground="#000000")
        self.b_switch_down.configure(highlightbackground="#d9d9d9")
        self.b_switch_down.configure(highlightcolor="black")
        self.b_switch_down.configure(pady="0")
        self.b_switch_down.configure(text='''DOWN''')

        self.b_controller_up = Button(top)
        self.b_controller_up.place(relx=0.21, rely=0.7, height=24, width=26)
        self.b_controller_up.configure(activebackground="#d9d9d9")
        self.b_controller_up.configure(activeforeground="#000000")
        self.b_controller_up.configure(background="#00ff00")
        self.b_controller_up.configure(command=FaultScenarios_v4_support.controller_up)
        self.b_controller_up.configure(disabledforeground="#a3a3a3")
        self.b_controller_up.configure(foreground="#000000")
        self.b_controller_up.configure(highlightbackground="#d9d9d9")
        self.b_controller_up.configure(highlightcolor="black")
        self.b_controller_up.configure(pady="0")
        self.b_controller_up.configure(text='''UP''')

        self.b_controller_down = Button(top)
        self.b_controller_down.place(relx=0.2, rely=0.86, height=24, width=48)
        self.b_controller_down.configure(activebackground="#d9d9d9")
        self.b_controller_down.configure(activeforeground="#000000")
        self.b_controller_down.configure(background="#ff0000")
        self.b_controller_down.configure(command=FaultScenarios_v4_support.controller_down)
        self.b_controller_down.configure(disabledforeground="#a3a3a3")
        self.b_controller_down.configure(foreground="#000000")
        self.b_controller_down.configure(highlightbackground="#d9d9d9")
        self.b_controller_down.configure(highlightcolor="black")
        self.b_controller_down.configure(pady="0")
        self.b_controller_down.configure(text='''DOWN''')

        self.b_host_interface_up = Button(top)
        self.b_host_interface_up.place(relx=0.88, rely=0.23, height=24, width=26)

        self.b_host_interface_up.configure(activebackground="#d9d9d9")
        self.b_host_interface_up.configure(activeforeground="#000000")
        self.b_host_interface_up.configure(background="#00ff00")
        self.b_host_interface_up.configure(command=FaultScenarios_v4_support.host_interface_up)
        self.b_host_interface_up.configure(disabledforeground="#a3a3a3")
        self.b_host_interface_up.configure(foreground="#000000")
        self.b_host_interface_up.configure(highlightbackground="#d9d9d9")
        self.b_host_interface_up.configure(highlightcolor="black")
        self.b_host_interface_up.configure(pady="0")
        self.b_host_interface_up.configure(text='''UP''')

        self.b_host_interface_down = Button(top)
        self.b_host_interface_down.place(relx=0.87, rely=0.33, height=24
                , width=48)
        self.b_host_interface_down.configure(activebackground="#d9d9d9")
        self.b_host_interface_down.configure(activeforeground="#000000")
        self.b_host_interface_down.configure(background="#ff0000")
        self.b_host_interface_down.configure(command=FaultScenarios_v4_support.host_interface_down)
        self.b_host_interface_down.configure(disabledforeground="#a3a3a3")
        self.b_host_interface_down.configure(foreground="#000000")
        self.b_host_interface_down.configure(highlightbackground="#d9d9d9")
        self.b_host_interface_down.configure(highlightcolor="black")
        self.b_host_interface_down.configure(pady="0")
        self.b_host_interface_down.configure(text='''DOWN''')

        self.b_switch_interface_up = Button(top)
        self.b_switch_interface_up.place(relx=0.88, rely=0.46, height=24
                , width=27)
        self.b_switch_interface_up.configure(activebackground="#d9d9d9")
        self.b_switch_interface_up.configure(activeforeground="#000000")
        self.b_switch_interface_up.configure(background="#00ff00")
        self.b_switch_interface_up.configure(command=FaultScenarios_v4_support.switch_interface_up)
        self.b_switch_interface_up.configure(disabledforeground="#a3a3a3")
        self.b_switch_interface_up.configure(foreground="#000000")
        self.b_switch_interface_up.configure(highlightbackground="#d9d9d9")
        self.b_switch_interface_up.configure(highlightcolor="black")
        self.b_switch_interface_up.configure(pady="0")
        self.b_switch_interface_up.configure(text='''UP''')

        self.b_switch_interface_down = Button(top)
        self.b_switch_interface_down.place(relx=0.87, rely=0.56, height=24
                , width=47)
        self.b_switch_interface_down.configure(activebackground="#d9d9d9")
        self.b_switch_interface_down.configure(activeforeground="#000000")
        self.b_switch_interface_down.configure(background="#ff0000")
        self.b_switch_interface_down.configure(command=FaultScenarios_v4_support.switch_interface_down)
        self.b_switch_interface_down.configure(disabledforeground="#a3a3a3")
        self.b_switch_interface_down.configure(foreground="#000000")
        self.b_switch_interface_down.configure(highlightbackground="#d9d9d9")
        self.b_switch_interface_down.configure(highlightcolor="black")
        self.b_switch_interface_down.configure(pady="0")
        self.b_switch_interface_down.configure(text='''DOWN''')

        self.b_controller_interface_up = Button(top)
        self.b_controller_interface_up.place(relx=0.66, rely=0.7, height=24
                , width=27)
        self.b_controller_interface_up.configure(activebackground="#d9d9d9")
        self.b_controller_interface_up.configure(activeforeground="#000000")
        self.b_controller_interface_up.configure(background="#00ff00")
        self.b_controller_interface_up.configure(command=FaultScenarios_v4_support.controller_interface_up)
        self.b_controller_interface_up.configure(disabledforeground="#a3a3a3")
        self.b_controller_interface_up.configure(foreground="#000000")
        self.b_controller_interface_up.configure(highlightbackground="#d9d9d9")
        self.b_controller_interface_up.configure(highlightcolor="black")
        self.b_controller_interface_up.configure(pady="0")
        self.b_controller_interface_up.configure(text='''UP''')

        self.b_controller_interface_down = Button(top)
        self.b_controller_interface_down.place(relx=0.65, rely=0.86, height=24
                , width=48)
        self.b_controller_interface_down.configure(activebackground="#d9d9d9")
        self.b_controller_interface_down.configure(activeforeground="#000000")
        self.b_controller_interface_down.configure(background="#ff0000")
        self.b_controller_interface_down.configure(command=FaultScenarios_v4_support.controller_interface_down)
        self.b_controller_interface_down.configure(disabledforeground="#a3a3a3")
        self.b_controller_interface_down.configure(foreground="#000000")
        self.b_controller_interface_down.configure(highlightbackground="#d9d9d9")
        self.b_controller_interface_down.configure(highlightcolor="black")
        self.b_controller_interface_down.configure(pady="0")
        self.b_controller_interface_down.configure(text='''DOWN''')

        self.menubar = Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.file = Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.file,
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="File")
        self.file.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.start_controller,
                font="TkMenuFont",
                foreground="#000000",
                label="Start Controller")
        self.file.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.detect_controllers,
                font="TkMenuFont",
                foreground="#000000",
                label="Detect Controllers")
        self.file.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.sim_network,
                font="TkMenuFont",
                foreground="#000000",
                label="Simulate SDN")
        self.file.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.load_data,
                font="TkMenuFont",
                foreground="#000000",
                label="Load Network Elements")
        self.file.add_separator(
                background="#d9d9d9")
        self.file.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.pingall,
                font="TkMenuFont",
                foreground="#000000",
                label="Ping All Hosts")
	self.file.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.test_pingall_tping,
                font="TkMenuFont",
                foreground="#000000",
                label="Test Tping")
        self.file.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.exit,
                font="TkMenuFont",
                foreground="#000000",
                label="Exit")
        self.host = Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.host,
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="Host")
        self.host.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.add_new_host_switch_link,
                font="TkMenuFont",
                foreground="#000000",
                label="Add new host <-> switch link")
	self.host.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.remove_host,
                font="TkMenuFont",
                foreground="#000000",
                label="Remove host")
        self.switch = Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.switch,
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="Switch")
        self.switch.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.add_new_switch_switch_link,
                font="TkMenuFont",
                foreground="#000000",
                label="Add new switch<->switch link")
        self.switch.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.add_new_switch,
                font="TkMenuFont",
                foreground="#000000",
                label="Add new switch")
	self.switch.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.remove_switch,
                font="TkMenuFont",
                foreground="#000000",
                label="Remove switch")
        self.tools = Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.tools,
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="Tools")
        self.tools.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.capture_data_interface,
                font="TkMenuFont",
                foreground="#000000",
                label="Capture Traffic on data plane interface")
        self.tools.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.capture_all_data_interfaces,
                font="TkMenuFont",
                foreground="#000000",
                label="Capture Everything on data plane")
        self.tools.add_separator(
                background="#d9d9d9")
        self.tools.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.capture_control_interface,
                font="TkMenuFont",
                foreground="#000000",
                label="Capture Traffic on control plane interface")
        self.tools.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.capture_all_control_interfaces,
                font="TkMenuFont",
                foreground="#000000",
                label="Capture Everything on control plane")
        self.tools.add_separator(
                background="#d9d9d9")
        self.tools.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.inject_random_faults,
                font="TkMenuFont",
                foreground="#000000",
                label="Inject Random Faults")
        self.service = Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.service,
                activebackground="#d9d9d9",
                activeforeground="#000000",
                background="#d9d9d9",
                font="TkMenuFont",
                foreground="#000000",
                label="Service")
        self.service.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.vlc_transmission,
                font="TkMenuFont",
                foreground="#000000",
                label="Add VLC streaming communication")
	self.service.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.get_intents,
                font="TkMenuFont",
                foreground="#000000",
                label="Get intents")
	self.service.add_command(
                activebackground="#d8d8d8",
                activeforeground="#000000",
                background="#d9d9d9",
                command=FaultScenarios_v4_support.add_H2Hintent,
                font="TkMenuFont",
                foreground="#000000",
                label="Add intent")


        self.Label_switch_dpid = Label(top)
        self.Label_switch_dpid.place(relx=0.58, rely=0.38, height=31, width=94)
        self.Label_switch_dpid.configure(activebackground="#f9f9f9")
        self.Label_switch_dpid.configure(activeforeground="black")
        self.Label_switch_dpid.configure(background="#d9d9d9")
        self.Label_switch_dpid.configure(disabledforeground="#a3a3a3")
        self.Label_switch_dpid.configure(foreground="#000000")
        self.Label_switch_dpid.configure(highlightbackground="#d9d9d9")
        self.Label_switch_dpid.configure(highlightcolor="black")
        self.Label_switch_dpid.configure(text='''Switch DPID''')

        self.listbox_switch_dpid = ScrolledListBox(top)
        self.listbox_switch_dpid.place(relx=0.53, rely=0.46, relheight=0.15
                , relwidth=0.19)
        self.listbox_switch_dpid.configure(background="white")
        self.listbox_switch_dpid.configure(disabledforeground="#a3a3a3")
        self.listbox_switch_dpid.configure(font="TkFixedFont")
        self.listbox_switch_dpid.configure(foreground="black")
        self.listbox_switch_dpid.configure(highlightbackground="#d9d9d9")
        self.listbox_switch_dpid.configure(highlightcolor="#d9d9d9")
        self.listbox_switch_dpid.configure(selectbackground="#c4c4c4")
        self.listbox_switch_dpid.configure(selectforeground="black")
        self.listbox_switch_dpid.configure(width=10)

        self.Label_host_ip = Label(top)
        self.Label_host_ip.place(relx=0.28, rely=0.12, height=31, width=124)
        self.Label_host_ip.configure(activebackground="#f9f9f9")
        self.Label_host_ip.configure(activeforeground="black")
        self.Label_host_ip.configure(background="#d9d9d9")
        self.Label_host_ip.configure(disabledforeground="#a3a3a3")
        self.Label_host_ip.configure(foreground="#000000")
        self.Label_host_ip.configure(highlightbackground="#d9d9d9")
        self.Label_host_ip.configure(highlightcolor="black")
        self.Label_host_ip.configure(text='''Host IP addresses''')

        self.listbox_host_ip = ScrolledListBox(top)
        self.listbox_host_ip.place(relx=0.28, rely=0.21, relheight=0.15
                , relwidth=0.19)
        self.listbox_host_ip.configure(background="white")
        self.listbox_host_ip.configure(disabledforeground="#a3a3a3")
        self.listbox_host_ip.configure(font="TkFixedFont")
        self.listbox_host_ip.configure(foreground="black")
        self.listbox_host_ip.configure(highlightbackground="#d9d9d9")
        self.listbox_host_ip.configure(highlightcolor="#d9d9d9")
        self.listbox_host_ip.configure(selectbackground="#c4c4c4")
        self.listbox_host_ip.configure(selectforeground="black")
        self.listbox_host_ip.configure(width=10)

        self.listbox_controller_name = ScrolledListBox(top)
        self.listbox_controller_name.place(relx=0.03, rely=0.7, relheight=0.21
                , relwidth=0.15)
        self.listbox_controller_name.configure(background="white")
        self.listbox_controller_name.configure(disabledforeground="#a3a3a3")
        self.listbox_controller_name.configure(font="TkFixedFont")
        self.listbox_controller_name.configure(foreground="black")
        self.listbox_controller_name.configure(highlightbackground="#d9d9d9")
        self.listbox_controller_name.configure(highlightcolor="#d9d9d9")
        self.listbox_controller_name.configure(selectbackground="#c4c4c4")
        self.listbox_controller_name.configure(selectforeground="black")
        self.listbox_controller_name.configure(width=10)
	self.listbox_controller_name.bind('<<ListboxSelect>>',FaultScenarios_v4_support.onselect_controller)

        self.Label_controller_name = Label(top)
        self.Label_controller_name.place(relx=0.03, rely=0.64, height=21
                , width=117)
        self.Label_controller_name.configure(activebackground="#f9f9f9")
        self.Label_controller_name.configure(activeforeground="black")
        self.Label_controller_name.configure(background="#d9d9d9")
        self.Label_controller_name.configure(disabledforeground="#a3a3a3")
        self.Label_controller_name.configure(foreground="#000000")
        self.Label_controller_name.configure(highlightbackground="#d9d9d9")
        self.Label_controller_name.configure(highlightcolor="black")
        self.Label_controller_name.configure(text='''Controller names''')

        self.listbox_switch_tcp_port = ScrolledListBox(top)
        self.listbox_switch_tcp_port.place(relx=0.3, rely=0.46, relheight=0.13
                , relwidth=0.12)
        self.listbox_switch_tcp_port.configure(background="white")
        self.listbox_switch_tcp_port.configure(disabledforeground="#a3a3a3")
        self.listbox_switch_tcp_port.configure(font="TkFixedFont")
        self.listbox_switch_tcp_port.configure(foreground="black")
        self.listbox_switch_tcp_port.configure(highlightbackground="#d9d9d9")
        self.listbox_switch_tcp_port.configure(highlightcolor="#d9d9d9")
        self.listbox_switch_tcp_port.configure(selectbackground="#c4c4c4")
        self.listbox_switch_tcp_port.configure(selectforeground="black")
        self.listbox_switch_tcp_port.configure(width=10)

        self.Label_switch_tcp_port = Label(top)
        self.Label_switch_tcp_port.place(relx=0.29, rely=0.4, height=21
                , width=114)
        self.Label_switch_tcp_port.configure(background="#d9d9d9")
        self.Label_switch_tcp_port.configure(disabledforeground="#a3a3a3")
        self.Label_switch_tcp_port.configure(foreground="#000000")
        self.Label_switch_tcp_port.configure(text='''Switch TCP ports''')
        self.Label_switch_tcp_port.configure(width=114)

        self.b_switch_tcp_port_up = Button(top)
        self.b_switch_tcp_port_up.place(relx=0.45, rely=0.46, height=24
                , width=26)
        self.b_switch_tcp_port_up.configure(activebackground="#d9d9d9")
        self.b_switch_tcp_port_up.configure(activeforeground="#000000")
        self.b_switch_tcp_port_up.configure(background="#00ff00")
        self.b_switch_tcp_port_up.configure(command=FaultScenarios_v4_support.switch_tcp_port_up)
        self.b_switch_tcp_port_up.configure(disabledforeground="#a3a3a3")
        self.b_switch_tcp_port_up.configure(foreground="#000000")
        self.b_switch_tcp_port_up.configure(highlightbackground="#d9d9d9")
        self.b_switch_tcp_port_up.configure(highlightcolor="black")
        self.b_switch_tcp_port_up.configure(pady="0")
        self.b_switch_tcp_port_up.configure(text='''UP''')

        self.b_switch_tcp_port_down = Button(top)
        self.b_switch_tcp_port_down.place(relx=0.44, rely=0.54, height=24
                , width=48)
        self.b_switch_tcp_port_down.configure(activebackground="#d9d9d9")
        self.b_switch_tcp_port_down.configure(activeforeground="#000000")
        self.b_switch_tcp_port_down.configure(background="#ff0000")
        self.b_switch_tcp_port_down.configure(command=FaultScenarios_v4_support.switch_tcp_port_down)
        self.b_switch_tcp_port_down.configure(disabledforeground="#a3a3a3")
        self.b_switch_tcp_port_down.configure(foreground="#000000")
        self.b_switch_tcp_port_down.configure(highlightbackground="#d9d9d9")
        self.b_switch_tcp_port_down.configure(highlightcolor="black")
        self.b_switch_tcp_port_down.configure(pady="0")
        self.b_switch_tcp_port_down.configure(text='''DOWN''')





# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    '''Configure the scrollbars for a widget.'''

    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = ttk.Scrollbar(master, orient='horizontal', command=self.xview)

        #self.configure(yscrollcommand=_autoscroll(vsb),
        #    xscrollcommand=_autoscroll(hsb))
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))

        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')

        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)

        # Copy geometry methods of master  (taken from ScrolledText.py)
        if py3:
            methods = Pack.__dict__.keys() | Grid.__dict__.keys() \
                  | Place.__dict__.keys()
        else:
            methods = Pack.__dict__.keys() + Grid.__dict__.keys() \
                  + Place.__dict__.keys()

        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        '''Hide and show scrollbar as needed.'''
        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)
        return wrapped

    def __str__(self):
        return str(self.master)

def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''
    def wrapped(cls, master, **kw):
        container = ttk.Frame(master)
        return func(cls, container, **kw)
    return wrapped

class ScrolledListBox(AutoScroll, Listbox):
    '''A standard Tkinter Text widget with scrollbars that will
    automatically show/hide as needed.'''
    @_create_container
    def __init__(self, master, **kw):
        Listbox.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)

if __name__ == '__main__':
    vp_start_gui()



